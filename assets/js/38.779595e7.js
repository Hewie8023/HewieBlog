(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{281:function(a,t,r){"use strict";r.r(t);var e=r(5),s=Object(e.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("p"),r("div",{staticClass:"table-of-contents"},[r("ul",[r("li",[r("a",{attrs:{href:"#概念"}},[a._v("概念")])]),r("li",[r("a",{attrs:{href:"#acid"}},[a._v("ACID")]),r("ul",[r("li",[r("a",{attrs:{href:"#原子性"}},[a._v("原子性")])]),r("li",[r("a",{attrs:{href:"#一致性"}},[a._v("一致性")])]),r("li",[r("a",{attrs:{href:"#隔离性"}},[a._v("隔离性")])]),r("li",[r("a",{attrs:{href:"#持久性"}},[a._v("持久性")])]),r("li",[r("a",{attrs:{href:"#关系"}},[a._v("关系")])])])])])]),r("p"),a._v(" "),r("h2",{attrs:{id:"概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概念","aria-hidden":"true"}},[a._v("#")]),a._v(" 概念")]),a._v(" "),r("p",[a._v("事务指的是满足 "),r("code",[a._v("ACID")]),a._v(" 特性的一组操作，可以通过 "),r("code",[a._v("Commit")]),a._v(" 提交一个事务，也可以使用 "),r("code",[a._v("Rollback")]),a._v(" 进行回滚。")]),a._v(" "),r("h2",{attrs:{id:"acid"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#acid","aria-hidden":"true"}},[a._v("#")]),a._v(" ACID")]),a._v(" "),r("h3",{attrs:{id:"原子性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#原子性","aria-hidden":"true"}},[a._v("#")]),a._v(" 原子性")]),a._v(" "),r("p",[a._v("事务被视为不可分割的最小单元，事务的所有操作要么全部提交成功，要么全部失败回滚。")]),a._v(" "),r("p",[a._v("回滚可以用回滚日志来实现，回滚日志记录着事务所执行的修改操作，在回滚时反向执行这些修改操作即可。")]),a._v(" "),r("h3",{attrs:{id:"一致性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一致性","aria-hidden":"true"}},[a._v("#")]),a._v(" 一致性")]),a._v(" "),r("p",[a._v("数据库在事务执行前后都保持一致性状态。在一致性状态下，所有事务对一个数据的读取结果都是相同的。")]),a._v(" "),r("h3",{attrs:{id:"隔离性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#隔离性","aria-hidden":"true"}},[a._v("#")]),a._v(" 隔离性")]),a._v(" "),r("p",[a._v("一个事务所做的修改在最终提交以前，对其它事务是不可见的。")]),a._v(" "),r("h3",{attrs:{id:"持久性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#持久性","aria-hidden":"true"}},[a._v("#")]),a._v(" 持久性")]),a._v(" "),r("p",[a._v("一旦事务提交，则其所做的修改将会永远保存到数据库中。即使系统发生崩溃，事务执行的结果也不能丢失。")]),a._v(" "),r("p",[a._v("使用重做日志来保证持久性。")]),a._v(" "),r("h3",{attrs:{id:"关系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关系","aria-hidden":"true"}},[a._v("#")]),a._v(" 关系")]),a._v(" "),r("p",[a._v("这几个特性不是一种平级关系：")]),a._v(" "),r("ul",[r("li",[a._v("只有满足一致性，事务的执行结果才是正确的。")]),a._v(" "),r("li",[a._v("在无并发的情况下，事务串行执行，隔离性一定能够满足。此时只要能满足原子性，就一定能满足一致性。")]),a._v(" "),r("li",[a._v("在并发的情况下，多个事务并行执行，事务不仅要满足原子性，还需要满足隔离性，才能满足一致性。")]),a._v(" "),r("li",[a._v("事务满足持久化是为了能应对数据库崩溃的情况。\n"),r("img",{attrs:{src:"https://s2.ax1x.com/2019/10/30/K5mdbt.jpg",alt:""}})])])])}),[],!1,null,null,null);t.default=s.exports}}]);