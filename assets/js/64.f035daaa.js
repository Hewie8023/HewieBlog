(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{299:function(t,a,v){"use strict";v.r(a);var _=v(5),s=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p"),v("div",{staticClass:"table-of-contents"},[v("ul",[v("li",[v("a",{attrs:{href:"#磁盘结构"}},[t._v("磁盘结构")])]),v("li",[v("a",{attrs:{href:"#磁盘调度算法"}},[t._v("磁盘调度算法")]),v("ul",[v("li",[v("a",{attrs:{href:"#先来先服务-fcfs"}},[t._v("先来先服务(FCFS)")])]),v("li",[v("a",{attrs:{href:"#最短寻道时间优先-sstf"}},[t._v("最短寻道时间优先(SSTF)")])]),v("li",[v("a",{attrs:{href:"#电梯算法-scan"}},[t._v("电梯算法(SCAN)")])])])])])]),v("p"),t._v(" "),v("h2",{attrs:{id:"磁盘结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#磁盘结构","aria-hidden":"true"}},[t._v("#")]),t._v(" 磁盘结构")]),t._v(" "),v("p",[t._v("盘面（"),v("code",[t._v("Platter")]),t._v("）：一个磁盘有多个盘面；")]),t._v(" "),v("p",[t._v("磁道（"),v("code",[t._v("Track")]),t._v("）：盘面上的圆形带状区域，一个盘面可以有多个磁道；")]),t._v(" "),v("p",[t._v("扇区（"),v("code",[t._v("Track Sector")]),t._v("）：磁道上的一个弧段，一个磁道可以有多个扇区，它是最小的物理储存单位，目前主要有 "),v("code",[t._v("512 bytes")]),t._v(" 与 "),v("code",[t._v("4 K")]),t._v(" 两种大小；")]),t._v(" "),v("p",[t._v("磁头（"),v("code",[t._v("Head")]),t._v("）：与盘面非常接近，能够将盘面上的磁场转换为电信号（读），或者将电信号转换为盘面的磁场（写）；")]),t._v(" "),v("p",[t._v("制动手臂（"),v("code",[t._v("Actuator arm")]),t._v("）：用于在磁道之间移动磁头；")]),t._v(" "),v("p",[t._v("主轴（"),v("code",[t._v("Spindle")]),t._v("）：使整个盘面转动。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://s2.ax1x.com/2019/10/31/KTY1hQ.jpg",alt:""}})]),t._v(" "),v("h2",{attrs:{id:"磁盘调度算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#磁盘调度算法","aria-hidden":"true"}},[t._v("#")]),t._v(" 磁盘调度算法")]),t._v(" "),v("p",[t._v("读写一个磁盘块的时间的影响因素有：")]),t._v(" "),v("p",[t._v("旋转时间（主轴转动盘面，使得磁头移动到适当的扇区上）")]),t._v(" "),v("p",[t._v("寻道时间（制动手臂移动，使得磁头移动到适当的磁道上）")]),t._v(" "),v("p",[t._v("实际的数据传输时间")]),t._v(" "),v("p",[t._v("其中，寻道时间最长，因此磁盘调度的主要目标是使磁盘的平均寻道时间最短。")]),t._v(" "),v("h3",{attrs:{id:"先来先服务-fcfs"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#先来先服务-fcfs","aria-hidden":"true"}},[t._v("#")]),t._v(" 先来先服务(FCFS)")]),t._v(" "),v("p",[t._v("按照磁盘请求的顺序进行调度。")]),t._v(" "),v("p",[t._v("优点是公平和简单。缺点也很明显，因为未对寻道做任何优化，使平均寻道时间可能较长。")]),t._v(" "),v("h3",{attrs:{id:"最短寻道时间优先-sstf"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#最短寻道时间优先-sstf","aria-hidden":"true"}},[t._v("#")]),t._v(" 最短寻道时间优先(SSTF)")]),t._v(" "),v("p",[t._v("优先调度与当前磁头所在磁道距离最近的磁道。")]),t._v(" "),v("p",[t._v("虽然平均寻道时间比较低，但是不够公平。如果新到达的磁道请求总是比一个在等待的磁道请求近，那么在等待的磁道请求会一直等待下去，也就是出现饥饿现象。具体来说，两端的磁道请求更容易出现饥饿现象。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://s2.ax1x.com/2019/10/31/KTY6j1.png",alt:""}})]),t._v(" "),v("h3",{attrs:{id:"电梯算法-scan"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#电梯算法-scan","aria-hidden":"true"}},[t._v("#")]),t._v(" 电梯算法(SCAN)")]),t._v(" "),v("p",[t._v("电梯总是保持一个方向运行，直到该方向没有请求为止，然后改变运行方向。")]),t._v(" "),v("p",[t._v("电梯算法（扫描算法）和电梯的运行过程类似，总是按一个方向来进行磁盘调度，直到该方向上没有未完成的磁盘请求，然后改变方向。")]),t._v(" "),v("p",[t._v("因为考虑了移动方向，因此所有的磁盘请求都会被满足，解决了 "),v("code",[t._v("SSTF")]),t._v(" 的饥饿问题。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://s2.ax1x.com/2019/10/31/KTYeXt.png",alt:""}})])])}),[],!1,null,null,null);a.default=s.exports}}]);