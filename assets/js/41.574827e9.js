(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{273:function(s,t,a){"use strict";a.r(t);var e=a(5),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#数据库创建"}},[s._v("数据库创建")])]),a("li",[a("a",{attrs:{href:"#创建表"}},[s._v("创建表")])]),a("li",[a("a",{attrs:{href:"#修改表"}},[s._v("修改表")])]),a("li",[a("a",{attrs:{href:"#插入"}},[s._v("插入")])]),a("li",[a("a",{attrs:{href:"#更新"}},[s._v("更新")])]),a("li",[a("a",{attrs:{href:"#删除"}},[s._v("删除")])]),a("li",[a("a",{attrs:{href:"#查询"}},[s._v("查询")])]),a("li",[a("a",{attrs:{href:"#排序"}},[s._v("排序")])]),a("li",[a("a",{attrs:{href:"#过滤"}},[s._v("过滤")])]),a("li",[a("a",{attrs:{href:"#通配符"}},[s._v("通配符")])]),a("li",[a("a",{attrs:{href:"#计算字段"}},[s._v("计算字段")])]),a("li",[a("a",{attrs:{href:"#函数"}},[s._v("函数")])]),a("li",[a("a",{attrs:{href:"#文本处理"}},[s._v("文本处理")])]),a("li",[a("a",{attrs:{href:"#分组"}},[s._v("分组")])]),a("li",[a("a",{attrs:{href:"#子查询"}},[s._v("子查询")])]),a("li",[a("a",{attrs:{href:"#连接"}},[s._v("连接")])]),a("li",[a("a",{attrs:{href:"#组合查询"}},[s._v("组合查询")])]),a("li",[a("a",{attrs:{href:"#视图"}},[s._v("视图")])]),a("li",[a("a",{attrs:{href:"#存储过程"}},[s._v("存储过程")])])])]),a("p"),s._v(" "),a("h2",{attrs:{id:"数据库创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库创建","aria-hidden":"true"}},[s._v("#")]),s._v(" 数据库创建")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATABASE")]),s._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("USE")]),s._v(" test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h2",{attrs:{id:"创建表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建表","aria-hidden":"true"}},[s._v("#")]),s._v(" 创建表")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" mytable "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# int 类型，不为空，自增")]),s._v("\n  id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AUTO_INCREMENT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# int 类型，不可为空，默认值为 1，不为空")]),s._v("\n  col1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 变长字符串类型，最长为 45 个字符，可以为空")]),s._v("\n  col2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("45")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 日期类型，可为空")]),s._v("\n  col3 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置主键为 id")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),s._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h2",{attrs:{id:"修改表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改表","aria-hidden":"true"}},[s._v("#")]),s._v(" 修改表")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("添加列")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" mytable\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" col "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])]),s._v(" "),a("li",[a("p",[s._v("删除列")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" mytable\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COLUMN")]),s._v(" col"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])]),s._v(" "),a("li",[a("p",[s._v("删除表")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" mytable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])]),s._v(" "),a("h2",{attrs:{id:"插入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插入","aria-hidden":"true"}},[s._v("#")]),s._v(" 插入")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("普通插入")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" mytable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("col1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" col2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("val1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])]),s._v(" "),a("li",[a("p",[s._v("插入检索出来的数据")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" mytable1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("col1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" col2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" col1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" col2\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mytable2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])]),s._v(" "),a("li",[a("p",[s._v("将一个表的内容插入到一个新表")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" newtable "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mytable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])]),s._v(" "),a("h2",{attrs:{id:"更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新","aria-hidden":"true"}},[s._v("#")]),s._v(" 更新")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" mytable\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" col "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" val\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h2",{attrs:{id:"删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除","aria-hidden":"true"}},[s._v("#")]),s._v(" 删除")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DELETE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mytable\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[a("code",[s._v("TRUNCATE TABLE")]),s._v(" 可以清空表，也就是删除所有行。")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRUNCATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" mytable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("使用更新和删除操作时一定要用 "),a("code",[s._v("WHERE")]),s._v(" 子句，不然会把整张表的数据都破坏。可以先用 "),a("code",[s._v("SELECT")]),s._v(" 语句进行测试，防止错误删除。")]),s._v(" "),a("h2",{attrs:{id:"查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询","aria-hidden":"true"}},[s._v("#")]),s._v(" 查询")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("DISTINCT")])]),s._v(" "),a("p",[s._v("相同值只会出现一次。它作用于所有列，也就是说所有列的值都相同才算相同。")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DISTINCT")]),s._v(" col1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" col2\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mytable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("LIMIT")])]),s._v(" "),a("p",[s._v("限制返回的行数。可以有两个参数，第一个参数为起始行，从 0 开始；第二个参数为返回的总行数。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("返回前 5 行：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mytable\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LIMIT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mytable\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LIMIT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])]),s._v(" "),a("li",[a("p",[s._v("返回第 3 ~ 5 行：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mytable\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LIMIT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])])])]),s._v(" "),a("h2",{attrs:{id:"排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#排序","aria-hidden":"true"}},[s._v("#")]),s._v(" 排序")]),s._v(" "),a("ul",[a("li",[s._v("ASC ：升序（默认）")]),s._v(" "),a("li",[s._v("DESC ：降序")])]),s._v(" "),a("p",[s._v("可以按多个列进行排序，并且为每个列指定不同的排序方式：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mytable\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" col1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DESC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" col2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ASC")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h2",{attrs:{id:"过滤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过滤","aria-hidden":"true"}},[s._v("#")]),s._v(" 过滤")]),s._v(" "),a("p",[s._v("不进行过滤的数据非常大，导致通过网络传输了多余的数据，从而浪费了网络带宽。因此尽量使用 SQL 语句来过滤不必要的数据，而不是传输所有的数据到客户端中然后由客户端进行过滤。")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mytable\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" col "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("下表显示了 "),a("code",[s._v("WHERE")]),s._v(" 子句可用的操作符")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("操作符")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("=")]),s._v(" "),a("td",[s._v("等于")])]),s._v(" "),a("tr",[a("td",[s._v("<")]),s._v(" "),a("td",[s._v("小于")])]),s._v(" "),a("tr",[a("td",[s._v(">")]),s._v(" "),a("td",[s._v("大于")])]),s._v(" "),a("tr",[a("td",[s._v("<> !=")]),s._v(" "),a("td",[s._v("不等于")])]),s._v(" "),a("tr",[a("td",[s._v("<= !>")]),s._v(" "),a("td",[s._v("小于等于")])]),s._v(" "),a("tr",[a("td",[s._v(">= !<")]),s._v(" "),a("td",[s._v("大于等于")])]),s._v(" "),a("tr",[a("td",[s._v("BETWEEN")]),s._v(" "),a("td",[s._v("在两个值之间")])]),s._v(" "),a("tr",[a("td",[s._v("IS NULL")]),s._v(" "),a("td",[s._v("为 NULL")])])])]),s._v(" "),a("p",[s._v("应该注意到，"),a("code",[s._v("NULL")]),s._v(" 与 "),a("code",[s._v("0")]),s._v("、空字符串都不同。")]),s._v(" "),a("p",[a("strong",[s._v("AND")]),s._v(" 和 "),a("strong",[s._v("OR")]),s._v(" 用于连接多个过滤条件。优先处理 "),a("strong",[s._v("AND")]),s._v("，当一个过滤表达式涉及到多个 "),a("strong",[s._v("AND")]),s._v(" 和 "),a("strong",[s._v("OR")]),s._v(" 时，可以使用 "),a("code",[s._v("()")]),s._v(" 来决定优先级，使得优先级关系更清晰。")]),s._v(" "),a("p",[a("strong",[s._v("IN")]),s._v("操作符用于匹配一组值，其后也可以接一个 "),a("code",[s._v("SELECT")]),s._v(" 子句，从而匹配子查询得到的一组值。")]),s._v(" "),a("p",[a("strong",[s._v("NOT")]),s._v(" 操作符用于否定一个条件。")]),s._v(" "),a("h2",{attrs:{id:"通配符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通配符","aria-hidden":"true"}},[s._v("#")]),s._v(" 通配符")]),s._v(" "),a("p",[s._v("通配符也是用在过滤语句中，但它只能用于文本字段。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("%")]),s._v(" 匹配 "),a("code",[s._v(">=0")]),s._v(" 个任意字符；")]),s._v(" "),a("li",[a("code",[s._v("_")]),s._v(" 匹配 "),a("code",[s._v("==1")]),s._v(" 个任意字符；")]),s._v(" "),a("li",[a("code",[s._v("[]")]),s._v(" 可以匹配集合内的字符，例如 "),a("code",[s._v("[ab]")]),s._v(" 将匹配字符 "),a("code",[s._v("a")]),s._v(" 或者 "),a("code",[s._v("b")]),s._v("。用脱字符 "),a("code",[s._v("^")]),s._v(" 可以对其进行否定，也就是不匹配集合内的字符。")])]),s._v(" "),a("p",[s._v("使用 "),a("code",[s._v("Like")]),s._v(" 来进行通配符匹配。")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mytable\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" col "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("LIKE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[^AB]%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 不以 A 和 B 开头的任意文本")]),s._v("\n")])])]),a("h2",{attrs:{id:"计算字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算字段","aria-hidden":"true"}},[s._v("#")]),s._v(" 计算字段")]),s._v(" "),a("p",[s._v("在数据库服务器上完成数据的转换和格式化的工作往往比客户端上快得多，并且转换和格式化后的数据量更少的话可以减少网络通信量。")]),s._v(" "),a("p",[s._v("计算字段通常需要使用 "),a("code",[s._v("AS")]),s._v(" 来取别名，否则输出的时候字段名为计算表达式。")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" col1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" col2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" alias\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mytable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[a("code",[s._v("CONCAT()")]),s._v(" 用于连接两个字段。许多数据库会使用空格把一个值填充为列宽，因此连接的结果会出现一些不必要的空格，使用 "),a("code",[s._v("TRIM()")]),s._v(" 可以去除首尾空格。")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" CONCAT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TRIM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("col1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'('")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" TRIM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("col2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("')'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" concat_col\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mytable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h2",{attrs:{id:"函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数","aria-hidden":"true"}},[s._v("#")]),s._v(" 函数")]),s._v(" "),a("p",[s._v("以下主要是 "),a("code",[s._v("MySQL")]),s._v(" 的函数。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("函 数")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("AVG()")]),s._v(" "),a("td",[s._v("返回某列的平均值")])]),s._v(" "),a("tr",[a("td",[s._v("COUNT()")]),s._v(" "),a("td",[s._v("返回某列的行数")])]),s._v(" "),a("tr",[a("td",[s._v("MAX()")]),s._v(" "),a("td",[s._v("返回某列的最大值")])]),s._v(" "),a("tr",[a("td",[s._v("MIN()")]),s._v(" "),a("td",[s._v("返回某列的最小值")])]),s._v(" "),a("tr",[a("td",[s._v("SUM()")]),s._v(" "),a("td",[s._v("返回某列值之和")])])])]),s._v(" "),a("p",[s._v("AVG() 会忽略 NULL 行。")]),s._v(" "),a("p",[s._v("使用 "),a("code",[s._v("DISTINCT")]),s._v(" 可以汇总不同的值。")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("AVG")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DISTINCT")]),s._v(" col1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" avg_col\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mytable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h2",{attrs:{id:"文本处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文本处理","aria-hidden":"true"}},[s._v("#")]),s._v(" 文本处理")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("函数")]),s._v(" "),a("th",[s._v("说明")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("LEFT ()")]),s._v(" "),a("td",[s._v("左边的字符")])]),s._v(" "),a("tr",[a("td",[s._v("RIGHT()")]),s._v(" "),a("td",[s._v("右边的字符")])]),s._v(" "),a("tr",[a("td",[s._v("LOWER()")]),s._v(" "),a("td",[s._v("转换为小写字符")])]),s._v(" "),a("tr",[a("td",[s._v("UPPER()")]),s._v(" "),a("td",[s._v("转换为大写字符")])]),s._v(" "),a("tr",[a("td",[s._v("LTRIM()")]),s._v(" "),a("td",[s._v("去除左边的空格")])]),s._v(" "),a("tr",[a("td",[s._v("RTRIM()")]),s._v(" "),a("td",[s._v("去除右边的空格")])]),s._v(" "),a("tr",[a("td",[s._v("LENGTH()")]),s._v(" "),a("td",[s._v("长度")])]),s._v(" "),a("tr",[a("td",[s._v("SOUNDEX()")]),s._v(" "),a("td",[s._v("转换为语音值")])])])]),s._v(" "),a("h2",{attrs:{id:"分组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分组","aria-hidden":"true"}},[s._v("#")]),s._v(" 分组")]),s._v(" "),a("p",[s._v("把具有相同的数据值的行放在同一组中。")]),s._v(" "),a("p",[s._v("可以对同一分组数据使用汇总函数进行处理，例如求分组数据的平均值等。")]),s._v(" "),a("p",[s._v("指定的分组字段除了能按该字段进行分组，也会自动按该字段进行排序。")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" col"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" num\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mytable\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" col"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[a("code",[s._v("GROUP BY")]),s._v(" 自动按分组字段进行排序，"),a("code",[s._v("ORDER BY")]),s._v(" 也可以按汇总字段来进行排序。")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" col"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" num\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mytable\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" col\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[a("code",[s._v("WHERE")]),s._v(" 过滤行，"),a("code",[s._v("HAVING")]),s._v(" 过滤分组，行过滤应当先于分组过滤。")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" col"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" num\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mytable\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" col "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("GROUP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" col\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("HAVING")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("分组规定：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("GROUP BY")]),s._v(" 子句出现在 "),a("code",[s._v("WHERE")]),s._v(" 子句之后，"),a("code",[s._v("ORDER BY")]),s._v(" 子句之前；")]),s._v(" "),a("li",[s._v("除了汇总字段外，"),a("code",[s._v("SELECT")]),s._v(" 语句中的每一字段都必须在 "),a("code",[s._v("GROUP BY")]),s._v(" 子句中给出；")]),s._v(" "),a("li",[a("code",[s._v("NULL")]),s._v(" 的行会单独分为一组；")]),s._v(" "),a("li",[s._v("大多数 "),a("code",[s._v("SQL")]),s._v(" 实现不支持 "),a("code",[s._v("GROUP BY")]),s._v(" 列具有可变长度的数据类型。")])]),s._v(" "),a("h2",{attrs:{id:"子查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子查询","aria-hidden":"true"}},[s._v("#")]),s._v(" 子查询")]),s._v(" "),a("p",[s._v("子查询中只能返回一个字段的数据。")]),s._v(" "),a("p",[s._v("可以将子查询的结果作为 "),a("code",[s._v("WHRER")]),s._v(" 语句的过滤条件：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mytable1\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" col1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" col2\n               "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mytable2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("下面的语句可以检索出客户的订单数量，子查询语句会对第一个查询检索出的每个客户执行一次：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" cust_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("COUNT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Orders\n                   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cust_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cust_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n                   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" orders_num\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Customers\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" cust_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h2",{attrs:{id:"连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连接","aria-hidden":"true"}},[s._v("#")]),s._v(" 连接")]),s._v(" "),a("p",[s._v("连接用于连接多个表，使用 "),a("code",[s._v("JOIN")]),s._v(" 关键字，并且条件语句使用 "),a("code",[s._v("ON")]),s._v(" 而不是 "),a("code",[s._v("WHERE。")])]),s._v(" "),a("p",[s._v("连接可以替换子查询，并且比子查询的效率一般会更快。")]),s._v(" "),a("p",[s._v("可以用 "),a("code",[s._v("AS")]),s._v(" 给列名、计算字段和表名取别名，给表名取别名是为了简化 "),a("code",[s._v("SQL")]),s._v(" 语句以及连接相同表。")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("内连接")])]),s._v(" "),a("p",[s._v("内连接又称等值连接，使用 "),a("code",[s._v("INNER JOIN")]),s._v(" 关键字。")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("value")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" tablea "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" A "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INNER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" tableb "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" B\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("可以不明确使用 "),a("code",[s._v("INNER JOIN")]),s._v("，而使用普通查询并在 "),a("code",[s._v("WHERE")]),s._v(" 中将两个表中要连接的列用等值方法连接起来。")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("value")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" tablea "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" tableb "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" B\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("自连接")])]),s._v(" "),a("p",[s._v("自连接可以看成内连接的一种，只是连接的表是自身而已。")]),s._v(" "),a("p",[s._v("一张员工表，包含员工姓名和员工所属部门，要找出与 Jim 处在同一部门的所有员工姓名。")]),s._v(" "),a("ul",[a("li",[s._v("子查询版本"),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" name\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employee\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" department "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" department\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employee\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Jim"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])]),s._v(" "),a("li",[s._v("自连接版本"),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" e1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" e1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INNER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" employee "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" e2\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" e1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("department "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" e2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("department\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("AND")]),s._v(" e2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Jim"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("自然连接")])]),s._v(" "),a("p",[s._v("自然连接是把同名列通过等值测试连接起来的，同名列可以有多个。")]),s._v(" "),a("p",[s._v("内连接和自然连接的区别：内连接提供连接的列，而自然连接自动连接所有同名列。")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("value")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" tablea "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" A "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("NATURAL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" tableb "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("外连接")])]),s._v(" "),a("p",[s._v("外连接保留了没有关联的那些行。分为左外连接，右外连接以及全外连接，左外连接就是保留左表没有关联的行。")]),s._v(" "),a("p",[s._v("检索所有顾客的订单信息，包括还没有订单信息的顾客。")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" Customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cust_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("order_num\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" Customers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LEFT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("OUTER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" Orders\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" Customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cust_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cust_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])]),s._v(" "),a("h2",{attrs:{id:"组合查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组合查询","aria-hidden":"true"}},[s._v("#")]),s._v(" 组合查询")]),s._v(" "),a("p",[s._v("使用 "),a("code",[s._v("UNION")]),s._v(" 来组合两个查询，如果第一个查询返回 "),a("code",[s._v("M")]),s._v(" 行，第二个查询返回 "),a("code",[s._v("N")]),s._v(" 行，那么组合查询的结果一般为 "),a("code",[s._v("M+N")]),s._v(" 行。")]),s._v(" "),a("p",[s._v("每个查询必须包含相同的列、表达式和聚集函数。")]),s._v(" "),a("p",[s._v("默认会去除相同行，如果需要保留相同行，使用 "),a("code",[s._v("UNION ALL")]),s._v("。")]),s._v(" "),a("p",[s._v("只能包含一个 "),a("code",[s._v("ORDER BY")]),s._v(" 子句，并且必须位于语句的最后。")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" col\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mytable\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" col "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNION")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" col\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mytable\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" col "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h2",{attrs:{id:"视图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#视图","aria-hidden":"true"}},[s._v("#")]),s._v(" 视图")]),s._v(" "),a("p",[s._v("视图是虚拟的表，本身不包含数据，也就不能对其进行索引操作。")]),s._v(" "),a("p",[s._v("对视图的操作和对普通表的操作一样。")]),s._v(" "),a("p",[s._v("视图具有如下好处：")]),s._v(" "),a("ul",[a("li",[s._v("简化复杂的 "),a("code",[s._v("SQL")]),s._v(" 操作，比如复杂的连接")]),s._v(" "),a("li",[s._v("只使用实际表的一部分数据；")]),s._v(" "),a("li",[s._v("通过只给用户访问视图的权限，保证数据的安全性；")]),s._v(" "),a("li",[s._v("更改数据格式和表示。")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VIEW")]),s._v(" myview "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" Concat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("col1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" col2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" concat_col"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" col3"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("col4 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" compute_col\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" mytable\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" col5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h2",{attrs:{id:"存储过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储过程","aria-hidden":"true"}},[s._v("#")]),s._v(" 存储过程")]),s._v(" "),a("p",[s._v("存储过程可以看成是对一系列 "),a("code",[s._v("SQL")]),s._v(" 操作的批处理。")]),s._v(" "),a("p",[s._v("使用存储过程的好处：")]),s._v(" "),a("ul",[a("li",[s._v("代码封装，保证了一定的安全性；")]),s._v(" "),a("li",[s._v("代码复用；")]),s._v(" "),a("li",[s._v("由于是预先编译，因此具有很高的性能。")])]),s._v(" "),a("p",[s._v("命令行中创建存储过程需要自定义分隔符，因为命令行是以 "),a("code",[s._v(";")]),s._v(" 为结束符，而存储过程中也包含了分号，因此会错误把这部分分号当成是结束符，造成语法错误。")]),s._v(" "),a("p",[s._v("包含 "),a("code",[s._v("in")]),s._v("、"),a("code",[s._v("out")]),s._v(" 和 "),a("code",[s._v("inout")]),s._v(" 三种参数。")]),s._v(" "),a("p",[s._v("给变量赋值都需要用 "),a("code",[s._v("select into")]),s._v(" 语句。")]),s._v(" "),a("p",[s._v("每次只能给一个变量赋值，不支持集合的操作。")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delimiter")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("procedure")]),s._v(" myprocedure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("out")]),s._v(" ret "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("begin")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" y "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("col1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" mytable\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("y "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" ret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delimiter")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("call")]),s._v(" myprocedure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@ret")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@ret")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);